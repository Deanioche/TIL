DROP TABLE T1;
CREATE TABLE T1 (C1 VARCHAR(2), C2 DATE, C3 NUMBER);

select avg(SAL) from EMP;

SELECT SAL FROM (SELECT SAL FROM EMP ORDER BY HIREDATE DESC) WHERE ROWNUM = 1;

SELECT *
FROM EMP
WHERE SAL > (SELECT SAL FROM
    (SELECT SAL, RANK() over (ORDER BY SAL DESC) AS RK
     FROM EMP
     WHERE SAL < 1300)
             WHERE RK = 1);

SELECT SAL, RANK() over (ORDER BY SAL DESC) AS RK
FROM EMP
WHERE SAL < 1300;

-- 2번 p109

drop table T1;
CREATE TABLE T1 (C1 NUMBER);

INSERT INTO T1 VALUES (1);
INSERT INTO T1 VALUES (2);
INSERT INTO T1 VALUES (3);

DROP TABLE T2;
CREATE TABLE T2 (C1 NUMBER);

INSERT INTO T2 VALUES (1);
INSERT INTO T2 VALUES (2);

SELECT COUNT(*) FROM T1 A WHERE EXISTS(SELECT 1 FROM T2 X WHERE X.C1 = C1); -- 3
SELECT COUNT(*) FROM T1 A WHERE EXISTS(SELECT 1 FROM T2 X WHERE X.C1 = X.C1); -- 3
SELECT COUNT(*) FROM T1 A WHERE EXISTS(SELECT 1 FROM T2 X WHERE X.C1 = A.C1); -- 2

-- 분석함수

SELECT * FROM DEPT;

SELECT
    DEPTNO
     ,EMPNO
     ,ENAME
     ,(SELECT DNAME FROM DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO) || ' : ' || COUNT(ENAME) over ( PARTITION BY DEPTNO)  || '명' AS R1
     ,TRUNC(AVG(SAL)OVER(PARTITION BY DEPTNO),2)
     ,SUM(SAL) OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) AS SUM_SAL
FROM EMP;

-- SUBSTR(str, n, a)

select SUBSTR('12345', 0) from DUAL; -- 12345
select SUBSTR('12345', 1) from DUAL; -- 12345
select SUBSTR('12345', 2) from DUAL; -- 2345
select SUBSTR('12345', 6) from DUAL; -- NULL
select SUBSTR('12345', -1) from DUAL; -- 5
select SUBSTR('12345', -5) from DUAL; -- 12345
select SUBSTR('12345', -6) from DUAL; -- NULL

select SUBSTR('12345',0, 4) from DUAL; -- 1234
select SUBSTR('12345',1, 4) from DUAL; -- 1234 0
select SUBSTR('12345',-2, 1) from DUAL; -- 4
select SUBSTR('12345',-5, 3) from DUAL; -- 123
select SUBSTR('12345',-5, 5) from DUAL; -- 12345
--
select LPAD('123', 5, '#') from dual; -- 34
select LPAD(RPAD(SUBSTR('12345',-3, 2), 3, '#'), 5, '*')as R1 from DUAL;

--

SELECT  A.DEPTNO, A.DNAME
     , (SELECT MAX(X.SAL) FROM EMP X WHERE X.DEPTNO = A.DEPTNO) AS MAX_SAL
     , (SELECT MAX (X.COMM) FROM EMP X WHERE X.DEPTNO = A.DEPTNO) AS MAX_COMM
FROM DEPT A
ORDER BY 1;

SELECT A.DEPTNO, A.DNAME, B.MAX_SAL, B.MAX_COMM
FROM DEPT A
   , (SELECT DEPTNO, MAX(SAL) AS MAX_SAL, MAX(COMM) AS MAX_COMM
      FROM EMP
      GROUP BY DEPTNO) B
WHERE A.DEPTNO = B.DEPTNO(+)
ORDER BY 1;

-- 집합 연산자

DROP TABLE T1;
CREATE TABLE T1(C1 NUMBER);

INSERT INTO T1 VALUES (1);
INSERT INTO T1 VALUES (1);
INSERT INTO T1 VALUES (2);

DROP TABLE T2;
CREATE TABLE T2(C1 NUMBER);

INSERT INTO T2 VALUES (1);
INSERT INTO T2 VALUES (3);

SELECT C1 FROM T1
INTERSECT
SELECT C1 FROM T2; -- 1

SELECT C1 FROM T1
MINUS
SELECT C1 FROM T2; -- 2

SELECT C1 FROM T1
UNION
SELECT C1 FROM T2; -- 1, 2, 3

SELECT C1 FROM T1
UNION ALL
SELECT C1 FROM T2; -- 1, 1, 2, 1, 3

--

DROP TABLE T1;
CREATE TABLE T1 (C1 VARCHAR(2), C2 DATE, C3 NUMBER);

INSERT INTO T1 VALUES ('A', '20500101', 1);
INSERT INTO T1 VALUES ('A', '20500102', 1);
INSERT INTO T1 VALUES ('B', '20500101', 1);
INSERT INTO T1 VALUES ('B', '20500102', 1);
INSERT INTO T1 VALUES ('C', '20500101', 1);
INSERT INTO T1 VALUES ('C', '20500102', 1);

SELECT C1, C2, SUM(C3)
FROM T1
GROUP BY cube (C2, C1);

SELECT b.dname, a.job, SUM(a.sal) sal, COUNT(a.empno) emp_count
FROM emp a,
     dept b
WHERE a.deptno = b.deptno
GROUP BY ROLLUP (b.dname, a.job)
ORDER BY 1;


--GROUPING SETS

SELECT C1, C2, SUM(C3) AS C3
FROM T1
GROUP BY GROUPING SETS ( (C1, C2), ())
ORDER BY 1, 2;

SELECT C1, C2, SUM(C3) AS C3
FROM T1
GROUP BY ROLLUP ((C1, C2))
ORDER BY 1;

-- RANK

SELECT EMPNO, ENAME, TRUNC(SAL, 0) AS SAL, ROW_NUMBER() OVER (ORDER BY SAL) AS C1
FROM EMP
WHERE DEPTNO = 30;

-- RANGE UNBOUNDED PRECEDING

UPDATE EMP SET SAL = 2975 WHERE ENAME = 'ADAMS';
UPDATE EMP SET SAL = 1100 WHERE ENAME = 'ADAMS';

SELECT EMPNO, ENAME, SAL, SUM(SAL) OVER ( ORDER BY SAL) AS C1
FROM EMP
WHERE DEPTNO = 20;

SELECT EMPNO, ENAME, SAL, SUM(SAL) OVER ( ORDER BY SAL RANGE UNBOUNDED PRECEDING ) AS C1
FROM EMP
WHERE DEPTNO = 20;

-- 값이 동일한 행은 모두 더한다.

SELECT EMPNO, ENAME, SAL
     , COUNT(*) OVER (
    ORDER BY SAL RANGE  BETWEEN 50 PRECEDING AND 100 FOLLOWING ) AS C1
FROM EMP
WHERE DEPTNO = 20;

SELECT EMPNO, ENAME, SAL
     , SUM(SAL) OVER (
    ORDER BY SAL RANGE BETWEEN 2200 PRECEDING AND 2200 FOLLOWING ) AS C1
FROM EMP
WHERE DEPTNO = 20;  -- SAL 값 -50 ~ SAL 값 + 2000의 사이의 SAL 컬럼의 개수



-- ROW
SELECT EMPNO, ENAME, SAL
     , COUNT(*) OVER (
    ORDER BY SAL ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) AS C1
FROM EMP
WHERE DEPTNO = 20; -- 현재 행부터 마지막 행까지 개수

SELECT EMPNO, ENAME, SAL
     , SUM(SAL) OVER (
    ORDER BY SAL ROWS between CURRENT ROW  and UNBOUNDED FOLLOWING ) AS C1
FROM EMP
WHERE DEPTNO = 20;

SELECT EMPNO, ENAME, SAL
     , COUNT(*) OVER (
    ORDER BY SAL ROWS BETWEEN 1 PRECEDING AND CURRENT ROW ) AS C1
FROM EMP
WHERE DEPTNO = 20;

SELECT JOB, TRUNC(SAL,0) AS SAL
     ,SUM(SAL) OVER(PARTITION BY JOB ORDER BY EMPNO
    ROWS BETWEEN UNBOUNDED PRECEDING  AND UNBOUNDED FOLLOWING) SAL1
     -- 첫째ROW부터 마지막ROW까지 윈도우로 설정되었으므로 전체합계
     ,SUM(SAL) OVER(PARTITION BY JOB ORDER BY EMPNO
    ROWS BETWEEN UNBOUNDED PRECEDING  AND CURRENT ROW) SAL2
     -- 첫째ROW부터 현재ROW까지 윈도우로 설정되었으므로 누적합계
     ,SUM(SAL) OVER(PARTITION BY JOB ORDER BY EMPNO
    ROWS BETWEEN CURRENT ROW  AND UNBOUNDED FOLLOWING) SAL3
     -- 현재ROW부터 마지막ROW까지 설정되었으으로 누적합계의 반대개념
FROM EMP
WHERE JOB = 'MANAGER';

--- ROWNUM

SELECT *
FROM (SELECT A.*, ROWNUM AS RN
      FROM (SELECT EMPNO, ENAME, SAL
            FROM EMP
            ORDER BY SAL DESC) A
      WHERE ROWNUM <= 10)
WHERE RN >= 6;

SELECT *
FROM(SELECT A.*, ROWNUM AS RN
     FROM (SELECT EMPNO, ENAME, SAL
           FROM EMP
           ORDER BY SAL DESC) A
     WHERE ROWNUM <= 5 * 2) -- 5(=페이지 행 수) * 2(=페이지 번호) = 10
WHERE RN >= (5 * (2 - 1)) + 1; -- (5[=페이지 행 수] * (2[=페이지 번호] - 1)) + 1 = 6

-- TOP WITH TIES

SELECT TOP(4) WITH TIES *
FROM EMP
ORDER BY SAL DESC;
-- `SQL Server`에서만 사용 가능한 함수

-- ROW LIMITING

SELECT ROW_NUMBER() over ( ORDER BY SAL DESC ) AS RN, ENAME, SAL
FROM EMP
ORDER BY SAL DESC FETCH FIRST 10 ROWS WITH TIES;

SELECT ROW_NUMBER() over ( ORDER BY SAL DESC ) AS RN, ENAME, SAL
FROM EMP
ORDER BY SAL DESC OFFSET 3 ROW;

SELECT *
FROM ( SELECT ROW_NUMBER() over ( ORDER BY SAL DESC ) AS RN, ENAME, SAL
       FROM EMP)
WHERE RN <= 3;

-- SELF JOIN

SELECT B.EMPNO, B.ENAME
FROM EMP A, EMP B
WHERE  A.ENAME = 'JONES'
  AND B.MGR = A.EMPNO;

-- CONNECT BY

SELECT EMPNO, ENAME, MGR, JOB
FROM EMP
START WITH ENAME = 'JONES'
CONNECT BY MGR = PRIOR EMPNO;
-- ENAME = 'JONES'인 행부터 시작해서 MGR = PRIOR EMPNO인 행 전부 출력.

UPDATE EMP SET MGR = 7566, JOB = 'ANALYST' WHERE ENAME = 'SMITH';
UPDATE EMP SET MGR = 7902, JOB = 'CLERK' WHERE ENAME = 'SMITH';

SELECT EMPNO, ENAME, MGR , JOB
FROM EMP
START WITH ENAME = 'JONES'
CONNECT BY MGR = PRIOR EMPNO
       AND JOB <> 'ANALYST';

SELECT EMPNO, ENAME, MGR , JOB
FROM EMP
START WITH ENAME = 'JONES'
CONNECT BY MGR = PRIOR EMPNO
       AND JOB <> 'CLERK';

--- \

WITH W1 (EMPNO, ENAME, MGR, LV) AS (
    SELECT EMPNO, ENAME, MGR, 1 AS LV
    FROM EMP
    WHERE ENAME = 'JONES'
    UNION ALL
    SELECT C.EMPNO, C.ENAME, C.MGR, P.LV + 1
    FROM W1 P, EMP C
    WHERE C.MGR = P.EMPNO)
SELECT EMPNO, ENAME, MGR, LV
FROM W1;

-- PIVOT

SELECT *
FROM (SELECT JOB, DEPTNO, SAL FROM EMP WHERE DEPTNO IN (10,20))
    PIVOT (SUM(SAL) FOR DEPTNO IN (10, 20))
ORDER BY JOB;

SELECT JOB, DEPTNO, SAL FROM EMP WHERE DEPTNO IN (10,20);

-- PIVOT ROW NAME

SELECT *
FROM (SELECT JOB, DEPTNO, SAL FROM EMP)
    PIVOT (SUM (SAL) AS SAL FOR DEPTNO IN (10 AS D10));

--UNPIVOT

DROP TABLE T1;
CREATE TABLE T1 (D10_SAL NUMBER, D20_SAL NUMBER, D30_SAL NUMBER);

INSERT INTO T1 VALUES (NULL, 6000, NULL);
INSERT INTO T1 VALUES (1300, 1900, 950);
INSERT INTO T1 VALUES (2450, 2975, 2850);
INSERT INTO T1 VALUES (5000, NULL, NULL);
INSERT INTO T1 VALUES (NULL, NULL, 5600);

SELECT * FROM T1;

SELECT JOB, DEPTNO, SAL
FROM T1
    UNPIVOT (SAL FOR DEPTNO IN(D10_SAL, D20_SAL, D30_SAL))
WHERE JOB = 'CLERK'
ORDER BY JOB, DEPTNO;

-- REGEXP_SUBSTR()
SELECT REGEXP_SUBSTR('ABC', 'A.+') AS C1, -- C1 탐욕적(최대)
       REGEXP_SUBSTR('ABC', 'A.+?') AS C2 -- C2 비탐욕적(최소)
FROM DUAL;

SELECT REGEXP_SUBSTR('ABD', 'AB|CD') AS C1,
       REGEXP_SUBSTR('ABD', 'A(B|C)D') AS C2
FROM DUAL;

SELECT REGEXP_SUBSTR('문A1자B2열C3', '([^123]+)', 1, 2) AS C1
FROM DUAL; -- B

SELECT REGEXP_SUBSTR('HTTP://WWW.ABC.COM/EFG', '([^:/]+)', 1, 1) AS C1
FROM DUAL; -- HTTP

SELECT REGEXP_SUBSTR('HTTP://WWW.ABC.COM/EFG', '([^(WWW)C]+)', 1, 4) AS C1
FROM DUAL;

SELECT REGEXP_SUBSTR('HTTP://WWW.ABC.COM/EFG', '([(WWW)C]+)', 1, 1) AS C1
FROM DUAL;

SELECT REGEXP_REPLACE('1A2B3C4D', '\d') AS C1 FROM DUAL; -- ABCD
SELECT REGEXP_REPLACE('1A2B3C4D', '\d', '_') AS C1 FROM DUAL; -- _A_B_C_D

--

SELECT EMPNO, ENAME, SAL, LAG(SAL, 2, 2) over (ORDER BY SAL) AS C1
FROM EMP; -- LAG(컬럼, 몇행 전 컬럼?, NULL은 뭘로?)

--- 핵심문제


-- 1
DROP TABLE T1;
CREATE TABLE T1 (C1 NUMBER);

INSERT INTO T1 VALUES (1);
INSERT INTO T1 VALUES (2);
INSERT INTO T1 VALUES (3);

DROP TABLE T2;
CREATE TABLE T2 (C1 NUMBER);

INSERT INTO T2 VALUES (1);
INSERT INTO T2 VALUES (NULL);

SELECT COUNT(*) FROM T1 WHERE C1 NOT IN (SELECT C1 FROM T2); -- 0

SELECT * FROM T1 WHERE C1 NOT IN (1, NULL); -- 0 ROW
SELECT * FROM T1 WHERE NOT (C1 = 1 OR C1 = NULL); -- 0 row
SELECT * FROM T1 WHERE (C1 <> 1 AND C1 <> NULL); -- 0 row
SELECT * FROM T1 WHERE (C1 <> 1 AND C1 = NULL); -- 0 row

-- 2
DROP TABLE T1;
CREATE TABLE T1 (C1 VARCHAR(1), C2 NUMBER);

DROP TABLE T2;
CREATE TABLE T2 (C1 VARCHAR(1), C2 NUMBER);

SELECT C1, C2 FROM T1
UNION ALL
SELECT C1 FROM T2;
-- ORA-01789: 질의 블록은 부정확한 수의 결과 열을 가지고 있습니다.

SELECT C1, C2 FROM T1
UNION ALL
SELECT C2, C1 FROM T2;
-- ORA-01790: 대응하는 식과 같은 데이터 유형이어야 합니다

SELECT C1, C2 FROM T1 ORDER BY C1
UNION ALL
SELECT C1, C2 FROM T2 ORDER BY C1;
-- ORA-00933: SQL 명령어가 올바르게 종료되지 않았습니다

(SELECT C1, C2 FROM T1)
UNION ALL
(SELECT C1, C2 FROM T2);
-- 정상 작동


-- 3

DROP TABLE T1;
CREATE TABLE T1(C1 NUMBER, C2 NUMBER);

INSERT INTO T1 VALUES (1, 1);
INSERT INTO T1 VALUES (1, 2);
INSERT INTO T1 VALUES (2, 1);
INSERT INTO T1 VALUES (2, 2);

DROP TABLE T2;
CREATE TABLE T2(C1 NUMBER, C2 NUMBER);

INSERT INTO T2 VALUES (1, 1);
INSERT INTO T2 VALUES (1, 2);
INSERT INTO T2 VALUES (2, 1);

SELECT * FROM T1 WHERE (C1 = 1 OR C2 = 1);

SELECT * FROM T1 WHERE C1 = 1
UNION ALL
SELECT * FROM T1 WHERE C2 = 1 AND C1 <> 1;

--- 4

DROP TABLE T1;
CREATE TABLE T1 (C1 VARCHAR(2), C2 DATE, C3 NUMBER);

INSERT INTO T1 VALUES ('A', '20500101', 1);
INSERT INTO T1 VALUES ('A', '20500102', 1);
INSERT INTO T1 VALUES ('B', '20500101', 1);
INSERT INTO T1 VALUES ('B', '20500102', 1);
INSERT INTO T1 VALUES ('C', '20500101', 1);
INSERT INTO T1 VALUES ('C', '20500102', 1);

SELECT C1, C2, SUM(C3) AS C3
    FROM T1
    GROUP BY ROLLUP((C1, C2)); -- ORDER BY C1, C2, 총합만 출력됨


SELECT C1, C2, SUM(C3) AS C3
FROM T1
GROUP BY ROLLUP((C2, C1)); -- ORDER BY C2, C1, 총합만 출력됨


SELECT C1, C2, SUM(C3) AS C3
FROM T1
GROUP BY C1, ROLLUP(C2); -- ORDER BY C1, C2, C1 기준 합계만 출력됨


SELECT C1, C2, SUM(C3) AS C3
FROM T1
GROUP BY C2, ROLLUP(C1); -- ORDER BY C2, C1, C2 기준 합계만 출력됨

--- 5

SELECT C1, C2, SUM(C3) AS C3,
    GROUPING(C1) AS GP
    FROM T1
    GROUP BY ROLLUP (C1, C2);

SELECT C1, C2, SUM(C3) AS C3,
       GROUPING(C2) AS GP
FROM T1
GROUP BY ROLLUP (C1, C2);


SELECT C1, C2, SUM(C3) AS C3,
       GROUPING(C1, C2) AS GP
FROM T1
GROUP BY ROLLUP (C1, C2);
-- ORA-00909: 인수의 개수가 부적합합니다

SELECT C1, C2, SUM(C3) AS C3,
       GROUPING(C2, C1) AS GP
FROM T1
GROUP BY ROLLUP (C1, C2);
-- ORA-00909: 인수의 개수가 부적합합니다

-- 6

SELECT EMPNO, ENAME, SAL, COMM, FIRST_VALUE(COMM) over (ORDER BY SAL) AS C1
    FROM EMP
    WHERE DEPTNO = 30;

---7

SELECT EMPNO, ENAME, SAL, LAG(SAL, 2) OVER ( ORDER BY SAL ) AS C1
    FROM EMP
    WHERE DEPTNO = 20;

SELECT EMPNO, ENAME, SAL, LAG(SAL, 2, 0) OVER ( ORDER BY SAL ) AS C1
FROM EMP
WHERE DEPTNO = 20;

SELECT EMPNO, ENAME, SAL, LEAD(SAL, 2) OVER ( ORDER BY SAL ) AS C1
FROM EMP
WHERE DEPTNO = 20;

SELECT EMPNO, ENAME, SAL, LEAD(SAL, 2, 0) OVER ( ORDER BY SAL ) AS C1
FROM EMP
WHERE DEPTNO = 20;

-- 8

SELECT * FROM (SELECT A.EMPNO, A.ENAME, A.SAL, A.DEPTNO, B.DNAME
              FROM EMP A, DEPT B
              WHERE B.DEPTNO(+) = A.DEPTNO
              ORDER BY SAL DESC)
    WHERE ROWNUM <= 3;

SELECT A.*, B.DNAME
    FROM (SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP ORDER BY SAL DESC) A, DEPT B
    WHERE ROWNUM <= 3
    AND B.DEPTNO(+) = A.DEPTNO;

-- 9

SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    ORDER BY SAL DESC; -- 14행

SELECT A.*, ROWNUM AS RN
    FROM (SELECT EMPNO, ENAME, SAL, DEPTNO
        FROM EMP
        ORDER BY SAL DESC ) A
WHERE ROWNUM <= 10; -- 10행

SELECT A.*
    FROM (SELECT A.*, ROWNUM AS RN
        FROM (SELECT EMPNO, ENAME, SAL, DEPTNO
            FROM EMP
            ORDER BY SAL DESC) A
        WHERE ROWNUM <= 10 ) A
    WHERE RN >= 6; -- 5행

-- 10

SELECT EMPNO, ENAME, MGR , JOB
FROM EMP
START WITH ENAME = 'JONES'
CONNECT BY MGR = PRIOR EMPNO
       AND JOB <> 'ANALYST';

SELECT COUNT (*)
    FROM EMP
    WHERE JOB <> 'ANALYST'
    START WITH ENAME = 'JONES'
    CONNECT BY MGR = PRIOR EMPNO;

SELECT COUNT (*)
FROM EMP
WHERE JOB <> 'ANALYST'
START WITH ENAME = 'JONES'
CONNECT BY MGR = PRIOR EMPNO;

--- 11

WITH W1 (EMPNO, ENAME, MGR) AS (
    SELECT EMPNO, ENAME, MGR
    FROM EMP
    WHERE ENAME = 'JONES'
    UNION ALL
    SELECT C.EMPNO, C.ENAME, C.MGR
    FROM W1 P, EMP C
    WHERE P.EMPNO = C.MGR)
SELECT EMPNO, ENAME, MGR
FROM W1;

-- 12

SELECT  *
    FROM (SELECT JOB, TO_CHAR (HIREDATE, 'YYYY') AS YYYY, DEPTNO, SAL
        FROM EMP
        WHERE DEPTNO IN (10, 30))
    PIVOT (SUM(SAL) FOR DEPTNO IN(10, 30))
    ORDER BY JOB, YYYY;

-- 13
DROP TABLE T1;
CREATE TABLE T1 (
                          JOB VARCHAR2(20),
                          D10_SAL NUMBER,
                          D20_SAL NUMBER,
                          D30_SAL NUMBER
);
INSERT INTO T1 VALUES ('ANALYST', NULL, 6000, NULL);
INSERT INTO T1 VALUES ('CLERK', 1300, 1900, 950);
INSERT INTO T1 VALUES ('MANAGER', 2450, 2975, 2850);
INSERT INTO T1 VALUES ('PRESIDENT', 5000, NULL, NULL);
INSERT INTO T1 VALUES ('SALESMAN', NULL, NULL, 5600);

SELECT * FROM T1;

SELECT COUNT(*) AS CNT
    FROM T1
    UNPIVOT INCLUDE NULLS
        (SAL FOR DEPTNO IN (D10_SAL AS 10, D20_SAL AS 20, D30_SAL AS 30))
    WHERE JOB = 'ANALYST';

---14

SELECT REGEXP_SUBSTR('12AB34CD', '[A-Z]+$') AS C1 FROM DUAL; -- CD

-- 15

SELECT REGEXP_SUBSTR('AABABCABCD','(AB)C\1') AS C1 FROM DUAL; -- ABCAB

SELECT REGEXP_SUBSTR('ABCABCABCABC','(AB)C\1') AS C1 FROM DUAL; -- ABCAB
SELECT REGEXP_SUBSTR('ABCABCABCABC','(AB)C(ABC)\1') AS C1 FROM DUAL; -- ABCABCAB
SELECT REGEXP_SUBSTR('ABCABCABCABC','(AB)C(ABC)\2') AS C1 FROM DUAL; -- ABCABCABC

--
